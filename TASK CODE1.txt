*code internship*

TASK1*

 <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Navigation Menu</title>
    <style>
        /* General styles */
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        /* Navigation menu styles */
        nav {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #333;
            color: white;
            padding: 10px 0;
            display: flex;
            justify-content: center;
            z-index: 1000;
            transition: background-color 0.3s;
        }

        nav.scrolled {
            background-color: #444;
        }

        nav ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
            display: flex;
            gap: 20px;
        }

        nav ul li {
            display: inline;
        }

        nav ul li a {
            color: white;
            text-decoration: none;
            padding: 5px 10px;
            transition: color 0.3s, background-color 0.3s;
        }

        nav ul li a:hover {
            background-color: white;
            color: #333;
            border-radius: 5px;
        }

        /* Placeholder content styles */
        .content {
            margin-top: 60px;
            padding: 20px;
        }

        .section {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>

<nav id="navbar">
    <ul>
        <li><a href="#section1">Home</a></li>
        <li><a href="#section2">About</a></li>
        <li><a href="#section3">Services</a></li>
        <li><a href="#section4">Contact</a></li>
    </ul>
</nav>

<div class="content">
    <div id="section1" class="section">Home Section</div>
    <div id="section2" class="section">About Section</div>
    <div id="section3" class="section">Services Section</div>
    <div id="section4" class="section">Contact Section</div>
</div>

<script>
    // Add scroll event listener to change navbar style
    window.addEventListener('scroll', () => {
        const navbar = document.getElementById('navbar');
        if (window.scrollY > 50) {
            navbar.classList.add('scrolled');
        } else {
            navbar.classList.remove('scrolled');
        }
    });
</script>

</body>
</html>


TAsk2*

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stopwatch</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Stopwatch</h1>
        <div class="stopwatch">
            <span id="time">00:00:00</span>
        </div>
        <div class="buttons">
            <button id="start">Start</button>
            <button id="pause">Pause</button>
            <button id="reset">Reset</button>
            <button id="lap">Lap</button>
        </div>
        <div class="laps">
            <h2>Lap Times</h2>
            <ul id="lap-times"></ul>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>

body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

.container {
    margin: 50px auto;
    max-width: 400px;
    padding: 20px;
    background: #ffffff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
}

h1 {
    font-size: 2rem;
    margin-bottom: 20px;
}

.stopwatch {
    font-size: 3rem;
    margin-bottom: 20px;
    color: #333;
}

.buttons button {
    padding: 10px 20px;
    margin: 5px;
    font-size: 1rem;
    border: none;
    background: #007bff;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.buttons button:hover {
    background: #0056b3;
}

.laps {
    text-align: left;
    margin-top: 20px;
}

.laps h2 {
    font-size: 1.5rem;
    margin-bottom: 10px;
}

#lap-times {
    list-style: none;
    padding: 0;
}

#lap-times li {
    font-size: 1rem;
    background: #f8f9fa;
    margin: 5px 0;
    padding: 5px;
    border-radius: 5px;
}
let timer = null;
let elapsedTime = 0;
let isRunning = false;

const timeDisplay = document.getElementById("time");
const lapTimes = document.getElementById("lap-times");

function updateTime() {
    elapsedTime += 1;
    const hours = String(Math.floor(elapsedTime / 3600)).padStart(2, "0");
    const minutes = String(Math.floor((elapsedTime % 3600) / 60)).padStart(2, "0");
    const seconds = String(elapsedTime % 60).padStart(2, "0");
    timeDisplay.textContent = `${hours}:${minutes}:${seconds}`;
}

document.getElementById("start").addEventListener("click", () => {
    if (!isRunning) {
        isRunning = true;
        timer = setInterval(updateTime, 1000);
    }
});

document.getElementById("pause").addEventListener("click", () => {
    clearInterval(timer);
    isRunning = false;
});

document.getElementById("reset").addEventListener("click", () => {
    clearInterval(timer);
    elapsedTime = 0;
    isRunning = false;
    timeDisplay.textContent = "00:00:00";
    lapTimes.innerHTML = "";
});

document.getElementById("lap").addEventListener("click", () => {
    if (isRunning) {
        const lapTime = timeDisplay.textContent;
        const li = document.createElement("li");
        li.textContent = lapTime;
        lapTimes.appendChild(li);
    }
});

TASK3*
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Tic-Tac-Toe</h1>
        <div class="board" id="board"></div>
        <div class="status">
            <p id="status">Player X's turn</p>
            <button id="reset">Reset Game</button>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

.container {
    margin: 50px auto;
    max-width: 400px;
    padding: 20px;
    background: #ffffff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 10px;
}

h1 {
    font-size: 2rem;
    margin-bottom: 20px;
}

.board {
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-gap: 5px;
    margin: 0 auto 20px auto;
}

.cell {
    width: 100px;
    height: 100px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    background-color: #007bff;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    user-select: none;
    transition: background-color 0.3s;
}

.cell:hover {
    background-color: #0056b3;
}

.cell.taken {
    background-color: #999999;
    cursor: not-allowed;
}

.status {
    margin-top: 10px;
}

#status {
    font-size: 1.2rem;
    margin-bottom: 10px;
}

button {
    padding: 10px 20px;
    font-size: 1rem;
    border: none;
    background: #007bff;
    color: white;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
}

button:hover {
    background: #0056b3;
}

const board = document.getElementById("board");
const cells = document.querySelectorAll(".cell");
const statusText = document.getElementById("status");
const resetButton = document.getElementById("reset");

let currentPlayer = "X";
let gameActive = true;
let gameState = Array(9).fill("");

const winningConditions = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6],
];

function checkWinner() {
    for (let condition of winningConditions) {
        const [a, b, c] = condition;
        if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {
            gameActive = false;
            statusText.textContent = `Player ${currentPlayer} Wins!`;
            return true;
        }
    }
    if (!gameState.includes("")) {
        gameActive = false;
        statusText.textContent = "It's a Draw!";
        return true;
    }
    return false;
}

function handleCellClick(event) {
    const cell = event.target;
    const index = cell.dataset.index;

    if (gameState[index] || !gameActive) {
        return;
    }

    gameState[index] = currentPlayer;
    cell.textContent = currentPlayer;
    cell.classList.add("taken");

    if (checkWinner()) {
        return;
    }

    currentPlayer = currentPlayer === "X" ? "O" : "X";
    statusText.textContent = `Player ${currentPlayer}'s Turn`;
}

function resetGame() {
    gameActive = true;
    currentPlayer = "X";
    gameState.fill("");
    statusText.textContent = `Player ${currentPlayer}'s Turn`;

    cells.forEach((cell) => {
        cell.textContent = "";
        cell.classList.remove("taken");
    });
}

cells.forEach((cell) => cell.addEventListener("click", handleCellClick));
resetButton.addEventListener("click", resetGame);


TASK4*
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Portfolio of [Your Name], a web developer.">
    <title>[Your Name]'s Portfolio</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <nav>
            <ul>
                <li><a href="#home">Home</a></li>
                <li><a href="#about">About Me</a></li>
                <li><a href="#projects">Projects</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </nav>
    </header>

    <section id="home" class="intro">
        <h1>Hi, I'm [Your Name]</h1>
        <p>Full-Stack Developer | Python, Django, Flask, SQL</p>
        <img src="your-photo.jpg" alt="Your Name's Photo">
    </section>

    <section id="about" class="about">
        <h2>About Me</h2>
        <p>Hi, I’m [Your Name], a passionate web developer with expertise in building dynamic and responsive web applications.</p>
        <p>Education: B.Tech in [Your Field]</p>
        <p>Professional Experience: [Your Experience]</p>
    </section>

    <section id="projects" class="projects">
        <h2>Projects</h2>
        <div class="project">
            <h3>Project 1: [Project Title]</h3>
            <p>[Project Description]</p>
            <a href="[Link to Project]" target="_blank">View Project</a>
        </div>
        <div class="project">
            <h3>Project 2: [Project Title]</h3>
            <p>[Project Description]</p>
            <a href="[Link to Project]" target="_blank">View Project</a>
        </div>
    </section>

    <section id="contact" class="contact">
        <h2>Contact</h2>
        <form action="[Form Handler]" method="POST">
            <label for="name">Name</label>
            <input type="text" id="name" name="name" required>

            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>

            <label for="message">Message</label>
            <textarea id="message" name="message" required></textarea>

            <button type="submit">Send Message</button>
        </form>
    </section>

    <footer>
        <p>&copy; 2025 [Your Name]. All Rights Reserved.</p>
        <p>Follow me on <a href="[LinkedIn URL]" target="_blank">LinkedIn</a> | <a href="[GitHub URL]" target="_blank">GitHub</a></p>
    </footer>
</body>
</html>



/* General Styles */
body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
    color: #333;
}

header {
    background-color: #333;
    padding: 10px;
    text-align: center;
}

nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
}

nav ul li {
    display: inline;
    margin-right: 20px;
}

nav ul li a {
    color: white;
    text-decoration: none;
    font-size: 18px;
}

a:hover {
    text-decoration: underline;
}

section {
    padding: 40px;
    margin: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Home Section */
#home {
    text-align: center;
}

#home h1 {
    font-size: 36px;
    margin-bottom: 10px;
}

#home p {
    font-size: 20px;
    color: #666;
}

#home img {
    max-width: 150px;
    border-radius: 50%;
}

/* About Section */
#about h2 {
    font-size: 28px;
}

#about p {
    font-size: 18px;
    color: #555;
}

/* Projects Section */
#projects h2 {
    font-size: 28px;
}

.project {
    margin-bottom: 20px;
}

.project h3 {
    font-size: 24px;
    color: #333;
}

.project p {
    font-size: 18px;
}

.project a {
    color: #0073e6;
}

/* Contact Section */
#contact form {
    display: flex;
    flex-direction: column;
}

#contact label {
    font-size: 16px;
    margin-bottom: 5px;
}

#contact input, #contact textarea {
    font-size: 16px;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

#contact button {
    background-color: #333;
    color: white;
    border: none;
    padding: 12px;
    cursor: pointer;
    font-size: 16px;
}

#contact button:hover {
    background-color: #555;
}

/* Footer */
footer {
    text-align: center;
    padding: 20px;
    background-color: #333;
    color: white;
}

footer p {
    font-size: 16px;
}

TASK 5*
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Weather App that shows current weather conditions based on location.">
    <title>Weather App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="weather-container">
        <h1>Weather App</h1>
        <div id="weather-info">
            <div>
                <label for="city">Enter a city:</label>
                <input type="text" id="city" placeholder="City name">
                <button id="getWeatherBtn">Get Weather</button>
            </div>
            <div id="currentWeather">
                <p id="city-name"></p>
                <p id="temperature"></p>
                <p id="description"></p>
                <p id="humidity"></p>
            </div>
        </div>
    </div>

    <script src="script.js"></script>
</body>
</html>
body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f0f0;
}

.weather-container {
    text-align: center;
    margin-top: 50px;
}

h1 {
    font-size: 36px;
    color: #333;
}

#weather-info {
    display: inline-block;
    text-align: left;
    margin-top: 20px;
    padding: 20px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
}

label {
    font-size: 18px;
}

input {
    padding: 10px;
    margin-top: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

button {
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    background-color: #333;
    color: white;
    border: none;
    border-radius: 4px;
}

button:hover {
    background-color: #555;
}

#currentWeather {
    margin-top: 20px;
}

#currentWeather p {
    font-size: 18px;
    margin: 5px 0;
}
// Get the API key from OpenWeatherMap
const apiKey = 'YOUR_API_KEY';  // Replace with your actual API key

// Get references to DOM elements
const getWeatherBtn = document.getElementById('getWeatherBtn');
const cityInput = document.getElementById('city');
const cityName = document.getElementById('city-name');
const temperature = document.getElementById('temperature');
const description = document.getElementById('description');
const humidity = document.getElementById('humidity');

// Function to fetch weather data from OpenWeatherMap API
async function getWeather(city) {
    try {
        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);
        const data = await response.json();

        // Check if the city is valid
        if (data.cod === '404') {
            alert("City not found!");
            return;
        }

        // Display the weather data
        cityName.textContent = `Weather in ${data.name}, ${data.sys.country}`;
        temperature.textContent = `Temperature: ${data.main.temp}°C`;
        description.textContent = `Description: ${data.weather[0].description}`;
        humidity.textContent = `Humidity: ${data.main.humidity}%`;

    } catch (error) {
        console.error("Error fetching weather data:", error);
        alert("Error fetching weather data.");
    }
}

// Event listener for the "Get Weather" button
getWeatherBtn.addEventListener('click', function() {
    const city = cityInput.value.trim();
    if (city) {
        getWeather(city);
    } else {
        alert("Please enter a city name.");
    }
});

